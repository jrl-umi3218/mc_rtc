digraph "mc_observers::ObserverPipeline"
{
 // INTERACTIVE_SVG=YES
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="mc_observers::ObserverPipeline",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node2 -> Node1 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" ctl_" ,fontname="Helvetica"];
  Node2 [label="mc_control::MCController",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmc__control_1_1MCController.html",tooltip="MCController is the base class to implement all controllers. It assumes that at least two robots are ..."];
  Node3 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" datastore_" ,fontname="Helvetica"];
  Node3 [label="mc_rtc::DataStore",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmc__rtc_1_1DataStore.html",tooltip="Generic data store. "];
  Node4 -> Node2 [dir="back",color="darkorchid3",fontsize="10",style="dashed",label=" config_" ,fontname="Helvetica"];
  Node4 [label="mc_rtc::Configuration",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$structmc__rtc_1_1Configuration.html",tooltip="Simplify access to values hold within a JSON file. "];
}
